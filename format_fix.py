'''
This script is used to convert the code generated by the AgentCoder baseline into the markdown format, fixing newline character errors and choosing the first code snippet out of all the code snippets generated by AgentCoder.
'''

import json

def process_log_file(input_file_path, output_file_path):
    modified_entries = []

    with open(input_file_path, 'r') as file:
        for line in file:
            try:
                entry = json.loads(line.strip())
                
                response = entry.get("response", "")
                
                if response:
                    code_snippets = eval(response)
                    
                    # get the first code snippet
                    if isinstance(code_snippets, list) and len(code_snippets) > 0:
                        first_code_snippet = code_snippets[0]
                        
                        # Replace \\n with \n for proper formatting
                        first_code_snippet = first_code_snippet.replace("\\n", "\n")
                        
                        # Format it as a markdown code block
                        formatted_response = f"```\n{first_code_snippet}\n```"
                        
                        entry["response"] = formatted_response
                
                modified_entries.append(entry)
            except json.JSONDecodeError:
                print(f"Failed to decode JSON for line: {line.strip()}")

    with open(output_file_path, 'w') as output_file:
        for entry in modified_entries:
            json.dump(entry, output_file)
            output_file.write('\n')

input_file_path = "log/manualRemove_dataset_HumanEvalComm_model_AgentCoder_topn_1_temperature_1.0.log_3"
output_file_path = "log/AC3.log"

process_log_file(input_file_path, output_file_path)

print("Log file processing complete. Modified entries saved to:", output_file_path)